#!/bin/bash

# List of Pokémon to fetch

# the Real Pokemons for Task2
# POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# the fake pokemons if you use these you will get error for Task 4 
POKEMONS=("bulbasaur" "fakepokemon")

# Output directory
OUTPUT_DIR="pokemon_data"
ERROR_LOG="errors.log"

# Create the output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"
> "$ERROR_LOG" # Clear error log

# Loop through each Pokémon
for NAME in "${POKEMONS[@]}"; do
    echo "Fetching data for $NAME..."

    RETRIES=3
    SUCCESS=0

    for (( i=1; i<=RETRIES; i++ )); do
        RESPONSE=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/${NAME}.json" "https://pokeapi.co/api/v2/pokemon/$NAME")
        STATUS_CODE=$(echo "$RESPONSE" | tail -c 4)

        if [ "$STATUS_CODE" -eq 200 ]; then
            echo "Saved data to $OUTPUT_DIR/${NAME}.json ✅"
            SUCCESS=1
            break
        else
            echo "$(date +'%Y-%m-%d %H:%M:%S') - Attempt $i failed for $NAME (Status: $STATUS_CODE)" | tee -a "$ERROR_LOG"

            sleep 1
        fi
    done

    if [ "$SUCCESS" -ne 1 ]; then
        echo "❌ Failed to fetch data for $NAME after $RETRIES attempts" | tee -a "$ERROR_LOG"
        rm -f "$OUTPUT_DIR/${NAME}.json" 2>/dev/null
    fi

    sleep 1
done
